// !!! This is a file automatically generated by hipify!!!
// Original TunableOp is from onnxruntime.
// https://github.com/microsoft/onnxruntime/blob/main/onnxruntime/core/framework/tunable.h
// https://github.com/microsoft/onnxruntime/tree/main/onnxruntime/core/providers/rocm/tunable
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
//
// Adapting TunableOp into PyTorch
// Copyright (c) Advanced Micro Devices, Inc.
//
#include <hip/hip_runtime.h>

#include "../ZoomStream.h"
#include "../ZoomException.h"
#include "StreamTimer.h"

namespace at::zoom::tunable {

StreamTimer::StreamTimer() {
  C10_ZOOM_CHECK(hipEventCreate(&start_));
  C10_ZOOM_CHECK(hipEventCreate(&end_));
}

StreamTimer::~StreamTimer() {
}

void StreamTimer::Start() {
  C10_ZOOM_CHECK(hipDeviceSynchronize());
  C10_ZOOM_CHECK(hipEventRecord(start_, c10::zoom::getCurrentZoomStream()));
}

void StreamTimer::End() {
  C10_ZOOM_CHECK(hipEventRecord(end_, c10::zoom::getCurrentZoomStream()));
  C10_ZOOM_CHECK(hipEventSynchronize(end_));
}

float StreamTimer::Duration() {
  float time;
  // time is in ms with a resolution of 1 us
  C10_ZOOM_CHECK(hipEventElapsedTime(&time, start_, end_));
  return time;
}

} // namespace at::zoom::tunable
